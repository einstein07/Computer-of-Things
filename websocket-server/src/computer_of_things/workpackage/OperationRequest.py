# automatically generated by the FlatBuffers compiler, do not modify

# namespace: workpackage

import flatbuffers

class OperationRequest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsOperationRequest(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OperationRequest()
        x.Init(buf, n + offset)
        return x

    # OperationRequest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # OperationRequest
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # OperationRequest
    def OpType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # OperationRequest
    def RequestType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # OperationRequest
    def Request(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def OperationRequestStart(builder): builder.StartObject(4)
def OperationRequestAddId(builder, id): builder.PrependInt64Slot(0, id, 0)
def OperationRequestAddOpType(builder, opType): builder.PrependInt8Slot(1, opType, 0)
def OperationRequestAddRequestType(builder, requestType): builder.PrependUint8Slot(2, requestType, 0)
def OperationRequestAddRequest(builder, request): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(request), 0)
def OperationRequestEnd(builder): return builder.EndObject()
